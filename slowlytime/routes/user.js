// Generated by CoffeeScript 1.6.3
var Dbauth, User, crypto, setting, status;

setting = require('../setting');

Dbauth = require('../lib/dbauth');

crypto = require('crypto');

User = require('../models/user');

status = {};

module.exports = function(app) {
  app.get('/user/auth/douban', function(req, res) {
    return res.redirect('https://www.douban.com/service/auth2/auth?response_type=code&client_id=' + setting.douban_auth.client_id + '&redirect_uri=' + setting.douban_auth.dev_host + 'users/callback');
  });
  app.get('/user/callback', function(req, res) {
    var auth;
    auth = new Dbauth(req.url);
    return auth.getUserInfo(function(err, data) {
      if (!err) {
        return res.json(data);
      } else {
        return res.redirect('/login');
      }
    });
  });
  app.post('/user/reg', function(req, res) {
    var md5, regUser;
    md5 = crypto.createHash('md5');
    regUser = {
      name: req.body.username,
      email: req.body.email,
      password: md5.update(req.body.password).digest('base64')
    };
    return User.get(regUser, function(err, user) {
      if (user != null) {
        status.errorCode = 101;
        res.json(status);
        return false;
      }
      return User.save(regUser, function(err, info) {
        if (err) {
          status.errorCode = 102;
          return res.json(status);
        } else {
          status.errorCode = 201;
          req.session.user = info;
          return res.json(status);
        }
      });
    });
  });
  app.post('/user/login', function(req, res) {
    var loginInfo, md5;
    md5 = crypto.createHash('md5');
    loginInfo = {
      email: req.body.email,
      password: md5.update(req.body.password).digest('base64')
    };
    return User.get(loginInfo, function(err, user) {
      if (user == null) {
        status.errorCode = 103;
      } else if (loginInfo.password !== user.password) {
        status.errorCode = 104;
      } else {
        req.session.user = user;
        status.errorCode = 202;
      }
      return res.json(status);
    });
  });
  return app.get('/user', function(req, res) {
    return res.render('index', {
      title: setting.title,
      brand: setting.brand
    });
  });
};
