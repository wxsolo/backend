// Generated by CoffeeScript 1.6.3
$(document).ready(function() {
  var Login, Register, Router, errorTip, isValidEmail, router;
  Login = (function() {
    var $btn, $email, $errorTip, $password, bok, checkInvalid, doLogin, events, msgHandle, url;

    function Login() {
      this.init();
    }

    $email = $('.login-email');

    $password = $('.login-password');

    $errorTip = $('.error-tip');

    $btn = $('.login-btn');

    url = '/api/u/login';

    bok = false;

    Login.prototype.init = function() {
      return events();
    };

    events = function() {
      $btn.click(function() {
        return doLogin();
      });
      $email.focus(function() {
        return errorTip($errorTip, '', 'hide');
      });
      return $password.focus(function() {
        return errorTip($errorTip, '', 'hide');
      });
    };

    checkInvalid = function(data) {
      if (!isValidEmail(data.email)) {
        errorTip($errorTip, 'invalid email address!', 'show');
        bok = false;
      } else if (data.password.length < 6) {
        errorTip($errorTip, 'password less than 6 charaters', 'show');
        bok = false;
      } else {
        bok = true;
      }
      return bok;
    };

    msgHandle = function(msg) {
      if (msg.errorCode === 202) {
        return window.location.href = '/admin';
      } else if (msg.errorCode === 103) {
        return errorTip($errorTip, 'user not exist!', 'show');
      } else if (msg.errorCode === 104) {
        return errorTip($errorTip, 'username or password error!', 'show');
      }
    };

    doLogin = function() {
      var data;
      data = {
        email: $email.val(),
        password: $password.val()
      };
      if (checkInvalid(data)) {
        return $.ajax({
          url: url,
          type: 'post',
          data: data,
          success: function(msg) {
            return msgHandle(msg);
          }
        });
      }
    };

    return Login;

  })();
  Register = (function() {
    var $btn, $email, $errorTip, $password, $uname, bok, checkInvalid, doRegister, events, msgHandle, url;

    function Register() {
      this.init();
    }

    $uname = $('.register-username');

    $email = $('.register-email');

    $password = $('.register-password');

    $btn = $('.register-btn');

    $errorTip = $('.error-tip');

    url = '/api/u/register';

    bok = false;

    Register.prototype.init = function() {
      return events();
    };

    events = function() {
      $btn.click(function() {
        return doRegister();
      });
      $uname.focus(function() {
        return errorTip($errorTip, '', 'hide');
      });
      $email.focus(function() {
        return errorTip($errorTip, '', 'hide');
      });
      return $password.focus(function() {
        return errorTip($errorTip, '', 'hide');
      });
    };

    checkInvalid = function(data) {
      if (data.username.length < 4) {
        return errorTip($errorTip, 'Invalid user name!', 'show');
      } else if (!isValidEmail(data.email)) {
        errorTip($errorTip, 'Invalid email address!', 'show');
        return bok = false;
      } else if (data.password.length < 6) {
        errorTip($errorTip, 'Password less than 6 characters!', 'show');
        return bok = false;
      } else {
        return bok = true;
      }
    };

    msgHandle = function(msg) {
      if (msg.errorCode === 201) {
        window.location.href = '/admin';
        return false;
      }
      if (msg.errorCode === 101) {
        return errorTip($errorTip, 'user acount is already exist', 'show');
      }
    };

    doRegister = function() {
      var data;
      data = {
        username: $uname.val(),
        email: $email.val(),
        password: $password.val()
      };
      if (checkInvalid(data)) {
        return $.ajax({
          url: url,
          type: 'post',
          data: data,
          success: function(msg) {
            return msgHandle(msg);
          }
        });
      }
    };

    return Register;

  })();
  Router = (function() {
    var current, urlHash;

    function Router() {
      this.url = window.location.href;
      this.init(this.url);
    }

    current = '';

    Router.prototype.init = function(url) {
      return urlHash(url);
    };

    urlHash = function(url) {
      var urls;
      urls = url.split('/');
      return current = urls[3];
    };

    Router.prototype.on = function(router, next) {
      if (router === current) {
        return next(null, router);
      } else {
        return next('not current', null);
      }
    };

    return Router;

  })();
  router = new Router();
  router.on('index', function(err, current) {
    if (current) {
      return $('.navbar-nav li').eq(0).addClass('active').siblings().removeClass('active');
    }
  });
  router.on('login', function(err, current) {
    var login;
    if (current) {
      $('.navbar-nav li').removeClass('active');
      return login = new Login();
    }
  });
  router.on('register', function(err, current) {
    var register;
    if (current) {
      register = new Register();
      return $('.navbar-nav li').removeClass('active');
    }
  });
  router.on('about', function(err, current) {
    if (current) {
      return $('.navbar-nav li').eq(2).addClass('active').siblings().removeClass('active');
    }
  });
  router.on('words', function(err, current) {
    var words;
    if (current) {
      words = new Words();
      return $('.navbar-nav li').eq(1).addClass('active').siblings().removeClass('active');
    }
  });
  router.on('p', function(err, current) {
    if (current) {
      return $('.navbar-nav li').removeClass('active');
    }
  });
  router.on('w', function(err, current) {
    if (current) {
      return $('.navbar-nav li').removeClass('active');
    }
  });
  isValidEmail = function(email) {
    var reMail;
    reMail = /^(?:[a-z\d]+[_\-\+\.]?)*[a-z\d]+@(?:([a-z\d]+\-?)*[a-z\d]+\.)+([a-z]{2,})+$/i;
    return reMail.test(email);
  };
  return errorTip = function(dom, msg, method) {
    if (method === 'show') {
      return dom.html(msg).css('color', '#b94a48');
    } else {
      return dom.html('');
    }
  };
});
